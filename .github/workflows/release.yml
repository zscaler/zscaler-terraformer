name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  pull-requests: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: 'go.mod'

      - name: Set release VERSION
        run: echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Update version.go
        run: |
          VERSION=${GITHUB_REF#refs/*/}
          # Remove 'v' prefix if present
          VERSION=${VERSION#v}
          # Update version.go file
          sed -i "s/var version = \".*\"/var version = \"$VERSION\"/" terraformutils/version.go
          # Verify the change
          echo "Updated version.go to:"
          grep "var version" terraformutils/version.go

      - name: Commit and push version.go update
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add terraformutils/version.go
          git diff --staged
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore: update version to ${{ env.VERSION }}"
            git push
          fi

      - name: Import GPG key
        id: import_gpg
        uses: paultyng/ghaction-import-gpg@v2.1.0
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ env.VERSION }}
