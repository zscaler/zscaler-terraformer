name: ZT Test

on:
  pull_request:
    types: [opened, synchronize]
  merge_group:
    types: [checks_requested]
  push:
    branches:
      - master

  schedule:
    - cron: '0 14 * * 1-5' # UTC
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  test:
    strategy:
      matrix:
        goVersion: ["1.24"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: install go
        uses: actions/setup-go@v6
        with:
          go-version: "1.24"

      - name: checkout
        uses: actions/checkout@v5

      - name: Setup Go Tools
        run: make tools

      - name: Install dependencies
        run: go mod download

      - name: Setup Go Tools
        run: make tools

      - name: Check Formatting
        run: make fmtcheck

      - name: Vet
        run: go vet ./...

      - name: Check out code into the Go module directory
        uses: actions/checkout@v5

      - name: Check Build
        run: make build

      - name: setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: write ZPA Terraform configuration
        run: |
            cat > main.tf <<EOF
            terraform {
              required_providers {
                zpa = {
                  source = "zscaler/zpa"
                  version = ">= 4"
                }
              }
            }
            EOF

      - name: terraform init
        run: terraform init

      - name: write ZIA Terraform configuration
        run: |
            cat > main.tf <<EOF
            terraform {
              required_providers {
                zia = {
                  source = "zscaler/zia"
                  version = ">= 4"
                }
              }
            }
            EOF

      - name: terraform init
        run: terraform init

      - name: Run All Tests
        run: |
          echo "ðŸ§ª Running All Tests..."
          go test -v ./tests/... -timeout 30s
          echo "âœ… All tests completed"

      - name: Run All Tests with Coverage
        run: |
          echo "ðŸ“Š Running All Tests with Coverage..."
          go test -cover -coverprofile=coverage.out ./tests/... -timeout 30s
          go tool cover -func=coverage.out
          echo "âœ… Coverage report completed"

      - name: Run integration tests with retries
        if: ${{ hashFiles('tests/integration/**/*_test.go') != '' }}
        run: |
          max_attempts=3
          attempt=0
          until [ "$attempt" -ge "$max_attempts" ]
          do
            attempt=$((attempt+1))
            make test-integration && break
            echo "Attempt $attempt of $max_attempts failed. Retrying..."
            sleep 10
          done
          if [ "$attempt" -eq "$max_attempts" ]; then
            echo "Test failed after $max_attempts attempts."
            exit 1
          fi
        env:
          ZSCALER_CLIENT_ID: ${{ secrets.ZSCALER_CLIENT_ID }}
          ZSCALER_CLIENT_SECRET: ${{ secrets.ZSCALER_CLIENT_SECRET }}
          ZSCALER_VANITY_DOMAIN: ${{ secrets.ZSCALER_VANITY_DOMAIN }}
          ZSCALER_CLOUD: ${{ secrets.ZSCALER_CLOUD }}
          ZPA_CUSTOMER_ID: ${{ secrets.ZPA_CUSTOMER_ID }}
