name: Update Homebrew Tap

on:
  release:
    types: [published]

permissions:
  contents: write
  pull-requests: write

jobs:
  update-homebrew-tap:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout zscaler-terraformer
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: 'go.mod'

      - name: Extract release info
        id: release_info
        run: |
          # Extract version from tag (remove 'v' prefix if present)
          VERSION="${{ github.event.release.tag_name }}"
          VERSION="${VERSION#v}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
          # Get download URL for assets
          DOWNLOAD_URL="https://github.com/zscaler/zscaler-terraformer/releases/download/${{ github.event.release.tag_name }}"
          echo "download_url=$DOWNLOAD_URL" >> $GITHUB_OUTPUT

      - name: Download and parse SHA256SUMS
        id: checksums
        run: |
          # Download the SHA256SUMS file
          curl -L "${{ steps.release_info.outputs.download_url }}/zscaler-terraformer_${{ steps.release_info.outputs.version }}_SHA256SUMS" \
            -o SHA256SUMS
          
          # Extract checksums for ALL 5 platform variants
          DARWIN_AMD64_SHA=$(grep "darwin_amd64" SHA256SUMS | cut -d' ' -f1)
          DARWIN_ARM64_SHA=$(grep "darwin_arm64" SHA256SUMS | cut -d' ' -f1)
          LINUX_AMD64_SHA=$(grep "linux_amd64" SHA256SUMS | cut -d' ' -f1)
          LINUX_ARM_SHA=$(grep "linux_arm.zip" SHA256SUMS | cut -d' ' -f1)     # 32-bit ARM
          LINUX_ARM64_SHA=$(grep "linux_arm64" SHA256SUMS | cut -d' ' -f1)     # 64-bit ARM
          
          echo "darwin_amd64_sha=$DARWIN_AMD64_SHA" >> $GITHUB_OUTPUT
          echo "darwin_arm64_sha=$DARWIN_ARM64_SHA" >> $GITHUB_OUTPUT
          echo "linux_amd64_sha=$LINUX_AMD64_SHA" >> $GITHUB_OUTPUT
          echo "linux_arm_sha=$LINUX_ARM_SHA" >> $GITHUB_OUTPUT
          echo "linux_arm64_sha=$LINUX_ARM64_SHA" >> $GITHUB_OUTPUT

      - name: Generate Homebrew formula
        id: formula
        run: |
          cat > zscaler-terraformer.rb << 'EOF'
          class ZscalerTerraformer < Formula
            desc "CLI tool to generate terraform files from existing ZPA and ZIA"
            homepage "https://github.com/zscaler/zscaler-terraformer"
            version "${{ steps.release_info.outputs.version }}"

            if OS.mac? && Hardware::CPU.intel?
              url "https://github.com/zscaler/zscaler-terraformer/releases/download/v#{version}/zscaler-terraformer_#{version}_darwin_amd64.zip"
              sha256 "${{ steps.checksums.outputs.darwin_amd64_sha }}"
            end

            if OS.mac? && Hardware::CPU.arm?
              url "https://github.com/zscaler/zscaler-terraformer/releases/download/v#{version}/zscaler-terraformer_#{version}_darwin_arm64.zip"
              sha256 "${{ steps.checksums.outputs.darwin_arm64_sha }}"
            end

            if OS.linux? && Hardware::CPU.intel?
              url "https://github.com/zscaler/zscaler-terraformer/releases/download/v#{version}/zscaler-terraformer_#{version}_linux_amd64.zip"
              sha256 "${{ steps.checksums.outputs.linux_amd64_sha }}"
            end

            if OS.linux? && Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
              url "https://github.com/zscaler/zscaler-terraformer/releases/download/v#{version}/zscaler-terraformer_#{version}_linux_arm.zip"
              sha256 "${{ steps.checksums.outputs.linux_arm_sha }}"
            end

            if OS.linux? && Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
              url "https://github.com/zscaler/zscaler-terraformer/releases/download/v#{version}/zscaler-terraformer_#{version}_linux_arm64.zip"
              sha256 "${{ steps.checksums.outputs.linux_arm64_sha }}"
            end

            def install
              bin.install "zscaler-terraformer"
            end

            test do
              system "#{bin}/zscaler-terraformer", "version"
            end
          end
          EOF

      - name: Checkout homebrew-tap repository
        uses: actions/checkout@v5
        with:
          repository: zscaler/homebrew-tap
          token: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          path: homebrew-tap

      - name: Update homebrew-tap formulas
        run: |
          cd homebrew-tap
          
          # Update main formula (root)
          cp ../zscaler-terraformer.rb .
          
          # Update Formula directory
          if [ -d "Formula" ]; then
            cp ../zscaler-terraformer.rb Formula/
          fi
          
          # Update Casks directory with proper cask format
          if [ -d "Casks" ]; then
            cat > Casks/zscaler-terraformer.rb << 'EOF'
          # Copyright (c) Zscaler, Inc.
          # MIT License

          cask "zscaler-terraformer" do
            name "zscaler-terraformer"
            homepage "https://github.com/zscaler/zscaler-terraformer"
            desc "CLI tool to generate terraform files from existing ZPA and ZIA"
            version "${{ steps.release_info.outputs.version }}"

            livecheck do
              url "https://github.com/zscaler/zscaler-terraformer/releases.atom"
              strategy :page_match
              regex(%r{href=.*?/tag/v?(\d+(?:\.\d+)+)["']}i)
            end

            if OS.mac? && Hardware::CPU.intel?
              url "https://github.com/zscaler/zscaler-terraformer/releases/download/v#{version}/zscaler-terraformer_#{version}_darwin_amd64.zip"
              sha256 "${{ steps.checksums.outputs.darwin_amd64_sha }}"
            end

            if OS.mac? && Hardware::CPU.arm?
              url "https://github.com/zscaler/zscaler-terraformer/releases/download/v#{version}/zscaler-terraformer_#{version}_darwin_arm64.zip"
              sha256 "${{ steps.checksums.outputs.darwin_arm64_sha }}"
            end

            if OS.linux? && Hardware::CPU.intel?
              url "https://github.com/zscaler/zscaler-terraformer/releases/download/v#{version}/zscaler-terraformer_#{version}_linux_amd64.zip"
              sha256 "${{ steps.checksums.outputs.linux_amd64_sha }}"
            end

            if OS.linux? && Hardware::CPU.arm? && !Hardware::CPU.is_64_bit?
              url "https://github.com/zscaler/zscaler-terraformer/releases/download/v#{version}/zscaler-terraformer_#{version}_linux_arm.zip"
              sha256 "${{ steps.checksums.outputs.linux_arm_sha }}"
            end

            if OS.linux? && Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
              url "https://github.com/zscaler/zscaler-terraformer/releases/download/v#{version}/zscaler-terraformer_#{version}_linux_arm64.zip"
              sha256 "${{ steps.checksums.outputs.linux_arm64_sha }}"
            end

            binary "zscaler-terraformer"
          end
          EOF
          fi

      - name: Commit directly to homebrew-tap
        run: |
          cd homebrew-tap
          
          # Configure git
          git config user.name "zscaler-terraformer-bot"
          git config user.email "devrel@zscaler.com"
          
          # Check if there are changes to commit
          if ! git diff --quiet; then
            # Commit and push changes directly to master
            git add .
            git commit -m "🤖 Update zscaler-terraformer to v${{ steps.release_info.outputs.version }}

            Updates zscaler-terraformer formula to version ${{ steps.release_info.outputs.version }}.
            
            Changes:
            - 📦 Version: ${{ steps.release_info.outputs.version }}
            - 🔐 Updated SHA256 checksums for all platforms
            - 🔗 Release: ${{ github.event.release.html_url }}
            
            Platforms updated:
            - macOS Intel: ${{ steps.checksums.outputs.darwin_amd64_sha }}
            - macOS ARM: ${{ steps.checksums.outputs.darwin_arm64_sha }}
            - Linux Intel: ${{ steps.checksums.outputs.linux_amd64_sha }}
            - Linux ARM (32-bit): ${{ steps.checksums.outputs.linux_arm_sha }}
            - Linux ARM (64-bit): ${{ steps.checksums.outputs.linux_arm64_sha }}"
            
            git push origin master
            echo "✅ Homebrew tap updated successfully!"
          else
            echo "ℹ️  No changes detected in homebrew-tap"
          fi
